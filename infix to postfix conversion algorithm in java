import java.util.Stack;
class stackinfixtopostfix{
	static int prec(char ch){
		switch(ch){
			case '+':return 1;
			case '-':
				return 1;
			case '*':return 2;
			case '/':
				return 2;
				
			case '^':
				return 3;
			
			default:
			return -1;	
		}
	}
	static String infixtopostfix(String name){
		String result=new String("");
		Stack<Character> stk=new Stack<>();
		for(int i=0;i<name.length();i++){
			char c=name.charAt(i);
			if (Character.isLetterOrDigit(c)) 
                result += c; 
			else if(c=='('){
				stk.push(c);
			}
			else if(c==')'){
				while(!stk.isEmpty() && stk.peek()!='(')
					result+=stk.pop();
				if(!stk.isEmpty() && stk.peek()!='(')
					return "Invalid";
				else
					stk.pop();//pop of (  this symbol from stack.
			}
			else{
				while(!stk.isEmpty() && prec(c) <= prec(stk.peek())){
					if(stk.peek()=='(') return "Invalid Expression";
					else result+=stk.pop();
				}
				stk.push(c);
			}
		}
		while(!stk.isEmpty()){
			if(stk.peek()=='(') return "Invalid Expression";
			result+=stk.pop();
		}
		return result;
	}
	public static void main(String[] args) {
		String exp="a+b*(c^d-e)^(f+g*h)-i";
		System.out.println(infixtopostfix(exp));
				
	}}

