#include<stdio.h>
#include<stdlib.h>

struct node
{int data;
struct node *prev,*next;
}*head=NULL,*p1,*p2,*last;

void insert_at_beginning()
{struct node *p1=(struct node *)malloc(sizeof(struct node *));
printf("Enter value for data of node-> ");
scanf("%d",&p1->data);
if(head==NULL)
{head=p1;
head->next=head;
head->prev=head;}
else{last=head->prev;
p1->next=head;
p1->prev=last;
last->next=p1;
head->prev=p1;
head=p1;}
}

void insert_at_position()
{int pos,count=1;
printf("Enter position of new data-> ");
scanf("%d",&pos);
if(pos==1)
insert_at_beginning();
else{p1=(struct node*)malloc(sizeof(struct node*));
printf("Enter value for data of node-> ");
scanf("%d",&p1->data);
p2=head;
while(count!=pos-1)
{count++;
p2=p2->next; }
p1->prev=p2;
p1->next=p2->next;
p2->next->prev=p1;
p2->next=p1; }
}

void insert_at_end()
{p1=(struct node *)malloc(sizeof(struct node *));
printf("Enter value for data of node-> ");
scanf("%d",&p1->data);
if(head==NULL)
{head=p1;
head->next=head;
head->prev=head; }
else{p1->next=head;
p1->prev=head->prev;
head->prev->next=p1;
head->prev=p1;}
}

void delete_at_beginning()
{if(head==NULL)
printf("Underflow\n");
else if(head->next==head)
{p2=head;
head=NULL;
free(p2); }
else{p2=head;
last=head->prev;
last->next=head->next;
head->next->prev=last;
head=head->next;
free(p2); }
}

void delete_at_position()
{int pos,count=1;
printf("Enter position to delete data-> ");
scanf("%d",&pos);
if(head==NULL)
printf("Underflow\n");
else{if(pos==1)
delete_at_beginning();
else{p1=head;
while(count!=pos-1)
{p1=p1->next;
count++; }
p2=p1->next;
p2->next->prev=p1;
p1->next=p2->next;
free(p2);} }
 }

void delete_at_end()
{if(head==NULL)
printf("Underflow\n");
else if(head->next==head)
{p2=head;
head=NULL;
free(p2);}
else{last=head->prev;
last->prev->next=head;
head->prev=last->prev;
free(last);}
}

void display()
{p1=head;
if(p1==NULL)
printf("Empty\n");
else{while(p1->next!=head)
{printf("%d->",p1->data);
p1=p1->next;}
printf("%d\n",p1->data);}
}

int main()
{printf("________Circular Doubly Linked List________\n");
int y;
while(1)
{printf("1.Insert At Beginning \n2.Insert At End \n3.Insert At Particular Position \n4.Display Circular Doubly Linked list \n5.Delete At Beginning \n6.Delete At End \n7.Delete At Particular Position \n8.Exit \nEnter your choice-> ");
scanf("%d",&y);
switch(y)
{case 1 :  insert_at_beginning();break;
 case 2 : insert_at_end();break;
 case 3: insert_at_position();break;
 case 4 : display();break;
 case 5: delete_at_beginning();break;
 case 6: delete_at_end();break;
 case 7 :delete_at_position();break;
 case 8: exit(0);
 default: printf("Wrong Choice Entered\n");  }
}return 0;
}
